#!/bin/bash
clear
LOCK_FILE="/etc/user_locks.db"
XRAY_CONFIG="/etc/xray/config.json"
BACKUP_DIR="/etc/xray/backups"
mkdir -p /etc/xray/backups
mkdir -p /etc/vless/
mkdir -p /etc/limit/vless/ip/

function send-ip() {
    CHATID=$(grep -E "^#bot# " "/etc/bot/.bot.db" | cut -d ' ' -f 3)
    KEY=$(grep -E "^#bot# " "/etc/bot/.bot.db" | cut -d ' ' -f 2)
    TIME="10"
    URL="https://api.telegram.org/bot$KEY/sendMessage"
    TEXT="
<code>────────────────────</code>
<b>⚠️ NOTIFICATIONS ⚠️</b>
<code>────────────────────</code>
<b>» Protocol:</b> <code>vless</code>
<b>» User:</b> <code>${user}</code>
<b>» Limit IP:</b> <code>${limit_ip} IP</code>
<b>» IP Login:</b> <code>${login_count} IP</code>
<b>» Status:</b> <code>User telah dikunci</code>
<b>» Durasi Penguncian 5 Menit</b>
<code>────────────────────</code>
<b>» 🤖 Awokawok Kena Lock...</b>
<code>────────────────────</code>
"
    curl -s --max-time $TIME -d "chat_id=$CHATID&disable_web_page_preview=1&text=$TEXT&parse_mode=html" $URL >/dev/null
}

function send-unban-notif() {
    CHATID=$(grep -E "^#bot# " "/etc/bot/.bot.db" | cut -d ' ' -f 3)
    KEY=$(grep -E "^#bot# " "/etc/bot/.bot.db" | cut -d ' ' -f 2)
    TIME="10"
    URL="https://api.telegram.org/bot$KEY/sendMessage"
    TEXT="
<code>────────────────────</code>
<b>❇️ NOTIFICATIONS ❇️</b>
<code>────────────────────</code>
<b>» Protocol:</b> <code>vless</code>
<b>» User:</b> <code>${unlocked_user}</code>
<b>» Status:</b> <code>Telah Bebas Dari Penguncian</code>
<b>» 🤖 Jangan Multi Login Lagi Ya Kak.</b>
<code>────────────────────</code>
"
    curl -s --max-time $TIME -d "chat_id=$CHATID&disable_web_page_preview=1&text=$TEXT&parse_mode=html" $URL >/dev/null
}

reload_services() {
    systemctl restart xray >/dev/null 2>&1
}

function modify_xray_config() {
    local action="$1"
    local user="$2"
    local protocol="vless"
    local marker="#& $user"

    if [[ $action == "lock" ]]; then

        cp "$XRAY_CONFIG" "$BACKUP_DIR/config.json.bak"

        sed -i "/^${marker}/,/^},{/d" "$XRAY_CONFIG"
        echo -e "User '${user}' on protocol '${protocol}' has been locked."
    elif [[ $action == "unlock" ]]; then

        if [[ -f "$BACKUP_DIR/config.json.bak" ]]; then
            cp "$BACKUP_DIR/config.json.bak" "$XRAY_CONFIG"
            echo -e "User '${user}' on protocol '${protocol}' has been restored from the backup."
        else
            echo -e "Backup not found! Failed to unlock user '${user}'."
        fi
    fi
}

function lock_user() {
    local user="$1"
    if [[ -z "$user" ]]; then
        echo -e "Username cannot be empty!"
        return
    fi

    if grep -qw "vless:${user}" "$LOCK_FILE"; then
        echo -e "User '${user}' on vless is already locked!"
        return
    fi

    echo "vless:${user}:$(date +%s)" >> "$LOCK_FILE" 
    modify_xray_config "lock" "$user"
    reload_services
}

function unlock_expired_users() {
    local current_time=$(date +%s)
    local temp_lock_file=$(mktemp)
    local unlocked_count=0

    while IFS= read -r line; do
        local protocol=$(echo "$line" | cut -d ':' -f 1)
        local user=$(echo "$line" | cut -d ':' -f 2)
        local lock_timestamp=$(echo "$line" | cut -d ':' -f 3)

        if [[ "$protocol" == "vless" && -n "$user" && -n "$lock_timestamp" ]]; then
            local elapsed_time=$((current_time - lock_timestamp))

            if [[ "$elapsed_time" -ge 300 ]]; then 
                echo "Attempting to unlock vless user: ${user} (locked for ${elapsed_time} seconds)"
                modify_xray_config "unlock" "$user"
                unlocked_user="$user"
                send-unban-notif
                unlocked_count=$((unlocked_count + 1))
            else
                echo "$line" >> "$temp_lock_file"
            fi
        else
            echo "$line" >> "$temp_lock_file"
        fi
    done < "$LOCK_FILE"

    mv "$temp_lock_file" "$LOCK_FILE"

    if [[ "$unlocked_count" -gt 0 ]]; then
        reload_services
        echo "Unlocked ${unlocked_count} vless user(s)."
    fi
}


function memulai_pengecekan() {
    clear
    > /tmp/other.txt

    unlock_expired_users

    data=($(grep -E "^#&" "$XRAY_CONFIG" | cut -d ' ' -f 2 | sort -u))
    for user in "${data[@]}"; do
        [[ -z "$user" ]] && continue

        > /tmp/ipvless.txt

        data2=($(grep -w "$user" /var/log/xray/access.log | tail -n 500 | grep -oP '\sfrom\s\K[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | sort -u))

        for ip in "${data2[@]}"; do
            if [[ -n "$ip" ]]; then
                echo "$ip" >> /tmp/ipvless.txt
            fi
        done

        if [[ -s /tmp/ipvless.txt ]]; then
            raw_limit_ip=$(cat /etc/limit/vless/ip/"$user" 2>/dev/null || echo 0)
            limit_ip=$(echo "$raw_limit_ip" | grep -o '[0-9]\+')

            login_count=$(wc -l < /tmp/ipvless.txt)

            echo -e "User        : $user"
            echo -e "Limit Login : ${limit_ip} IP"
            echo -e "Active IP   : $login_count IP"

            if [[ "$login_count" -gt "$limit_ip" ]]; then
                send-ip
                lock_user "$user"
                continue
            fi
        fi
    done
    
    rm -f /tmp/other.txt /tmp/ipvless.txt
    echo -n > /var/log/xray/access.log
    sleep 2

}

memulai_pengecekan